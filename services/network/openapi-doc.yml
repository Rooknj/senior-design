openapi: '3.0.2'
info:
  title: Network Service
  version: '0.1.0'
  description: The Network service defines a set of APIs and commands that enable clients to create, update, and delete network documents. 
servers:
  - url: https://api.server.test/api
    description: Production
  - url: https:// dev.server.test/api
    description: Staging Release

paths:
  /network:
    get:
      security:
        - OAuth2: [write]
        - BearerAuth: []
      parameters:
        - in: query
          name: orderBy
          schema:
            type: string
            enum: [createdAt, owner, updatedAt]
          required: false
        - in: query
          name: fields
          schema:
            type: string
            enum: [id, name]
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 20
                items: 
                  type: object
                  $ref: '#/components/schemas/Network_Full'
            application/vnd.virtuoso.full+json:
              schema:
                type: array
                maxItems: 20
                items: 
                  type: object
                  $ref: '#/components/schemas/Network_Full'
            application/vnd.virtuoso.full.hateoas+json:
              schema:
                type: array
                maxItems: 20
                items: 
                  type: object
                  $ref: '#/components/schemas/Network_Full'
            application/vnd.virtuoso.slim.hateoas+json:
              schema:
                type: array
                maxItems: 20
                items: 
                  type: object
                  $ref: '#/components/schemas/Network_Slim'
            application/vnd.virtuoso.slim+json:
              schema:
                type: array
                maxItems: 20
                items: 
                  type: object
                  $ref: '#/components/schemas/Network_Slim'
          headers:
            X-Pagination:
              schema: 
                additionalProperties: false
                type: object
                properties:
                  pageNumber:
                    type: integer
                    minimum: 1
                    maximum: 1000
                  totalPages:
                    type: integer
                    minimum: 1
                    maximum: 1000
                  totalCount:
                    type: integer
                    minimum: 0
                    maximum: 999999999
                  pageSize:
                    type: integer
                    minimum: 1
                    maximum: 25
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      security:
        - OAuth2: [write]
      requestBody:
        description: Network to create.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/NetworkForCreation'
      responses:
        '201':
          description: Created
          headers:
            Location: 
              schema:
                type: string
                format: uri
                description: A relative link to the newly created resource.
        '400': 
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    maxItems: 100
                    items:
                      type: string
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /network/{id}:
    get:
      security:
        - OAuth2: [read]
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the Network Resource.
          schema:
            type: string
            format: uuid

      responses:
        '200':
          description: Found
          headers:
            Cache-Control:
              schema:
                type: string
                default: "private, max-age=120000"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Full'
            application/vnd.virtuoso.full+json:
              schema:
                $ref: '#/components/schemas/Network_Full'
            application/vnd.virtuoso.full.hateoas+json:
              schema:
                $ref: '#/components/schemas/Network_Full'
            application/vnd.virtuoso.slim+json:
              schema:
                $ref: '#/components/schemas/Network_Slim'
            application/vnd.virtuoso.slim.hateoas+json:
              schema:
                $ref: '#/components/schemas/Network_Slim'
        '404':
          $ref: '#/components/responses/NotFound'          
    patch:
      security:
        - OAuth2: [write]
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the network to Patch
          schema:
            type: string
            format: uuid
      requestBody:
        description: A JSON Patch document
        content:
          application/json:
            schema:
              type: string
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    delete:
      security:
        - OAuth2: [write]
        - BearerAuth: []
      parameters:
        - in: path
          required: true
          name: id
          description: ID of the resource to be deleted.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access.
            write: Grants write access.
            admin: grants access to admin operations.
  
  responses:
    NotFound:
      description: The specified resource was not found.
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Validation Errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
  schemas:
    Network_Full:
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
          description: UUID
        name:
          type: string
          maxLength: 255
          description: A unique name for the network.
        owner:
          type: string
          description: The ID of the user who created the network.
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        subNetworks:
          type: array
          maxItems: 100
          items: 
            type: string
            format: uuid
          description: An Array of Sub-Networks.
        machineConfigurations:
          type: array
          maxItems: 100
          items:
            $ref: '#/components/schemas/MachineConfiguration'

    Network_Slim:
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
          description: UUID
        name:
          type: string
          description: A unique name for the network.
        owner:
          type: string
          description: The ID of the user who created the network.
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    MachineConfiguration:
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        address: 
          type: string
          format: ipv4
        imageName:
          type: string
        network:
          type: object
          properties:
            openPorts:
              type: array
              maxItems: 100
              items:
                type: integer
                minimum: 1
                maximum: 64534
            networks:
              type: array
              maxItems: 100
              items:
                type: string
                format: uuid
            adjacentMachines:
              type: array
              maxItems: 100
              items:
                type: string
                format: uuid  
    
    NetworkCollection_Full_Hateoas:
      properties:
        links:
          type: array
          maxItems: 100
          items:
            type: string
            format: uri
        data:
          type: array
          maxItems: 100
          items:
            type: object
            $ref: '#/components/schemas/Network_Full'

    NetworkCollection_Slim_Hateoas:
      properties:
        links:
          type: array
          maxItems: 20
          items:
            type: string
            format: uri
        data:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Network_Slim'
    
    NetworkForCreation:
      required:
        - name
        - owner
      properties:
        name:
          type: string
          maxLength: 255
          description: A unique name for the network.
        owner:
          type: string
          format: uuid
          description: The ID of the user who created the network.
      additionalProperties: false

    Error:
      additionalProperties: false
      properties:
       errors:
        type: array
        maxItems: 100
        items:
          type: object
          properties:
            type:
              type: string
            message:
              type: string        
        