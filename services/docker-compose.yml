version: '3'

networks:
  kong-net:
    driver: bridge
  database-net:
    driver: bridge

services:
  # Front-end Web Service
  # (accessible at http://localhost:80/)
  # ---
  web:
    build: ./web/
    container_name: virtuoso_web_service
    restart: always
    environment:
      FOO: bar
    ports:
      - '80:80'
  # Container Service
  # ---
  container:
    build:
      context: ./virtuoso-container/
      dockerfile: Dockerfile
    container_name: virtuoso_container_service
    restart: always
    ports:
      - '5000:5000'
    networks:
      - kong-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # Network Service
  # ---
  # network:
  #   build: ./virtuoso-network/
  #   container_name: virtuoso_container_service
  #   restart: always
  #   environment:
  #     MONGO_URL: mongodb://root:root@virtuoso_mongo_service:27017/test
  #   ports:
  #     - '6000:8080'
  #   networks:
  #     - kong-net
  #     - database-net
  #   depends_on:
  #     - mongo
  #     - api_gateway
  # Web SSH Service
  # ---
  web_ssh:
    build: ./virtuoso-web-ssh/
    container_name: virtuoso_web_ssh_service
    restart: always
    ports:
      - '8888:8888'
    network_mode: bridge
    environment:
      STANDARD_CONTAINER_USERNAME: virtuoso
      STANDARD_CONTAINER_PASSWORD: password
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - container
  # API Gateway
  # (kong w/o database)
  # ---
  api_gateway:
    build: ./virtuoso-api-gateway/
    container_name: virtuoso_api_gateway_service
    restart: always
    ports:
      - '8000:8000'
      - '8001:8001' # Remove this for production
    networks:
      - kong-net
  # Auth Service
  # ---
  auth:
    build: ./virtuoso-auth/
    container_name: virtuoso_auth_service
    hostname: virtuoso_auth_service
    restart: always
    environment:
      MONGODB_URI: mongodb://root:root@virtuoso_mongo_service:27017/test
      JWT_SECRET: test123
    ports:
      - '4000:4000'
    networks:
      - kong-net
      - database-net
    depends_on:
      - mongo
      - api_gateway
  # MongoDB
  # ---
  mongo:
    image: mongo:4.2.2-bionic # MongoDB on Ubuntu Bionic
    container_name: virtuoso_mongo_service
    hostname: virtuoso_mongo_service
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: test
    ports:
      - '27017:27017'
    networks:
      - database-net
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro # this works so we're keeping it
      - ./_docker_compose_volumes/mongoData:/data/db
